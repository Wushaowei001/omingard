# Omingard
Port of Better Solitaire [Irmingard](http://irmingard.herokuapp.com) to [ClojureScript](https://github.com/clojure/clojurescript) and [Om](https://github.com/swannodette/om).
The name's kind of a personal joke - please bear with me :)
Original implementation with [CoffeeScript](http://coffeescript.org) and [Backbone Marionette](http://marionettejs.com):
[irmingard-backbone](https://github.com/paulwittmann/irmingard-backbone).

### Demo
[![screenshot](/current_screenshot.png)](https://dl.dropboxusercontent.com/u/15321563/omingard/index.html)
Found a bug? Please create a new [issue](https://github.com/paulwittmann/omingard/issues) - thank you!


### Setup
Check out this repository:

    git clone git@github.com:paulwittmann/omingard.git

Watch for ClojureScript changes:

    lein cljsbuild auto

Watch for CSS changes - preprocessor language: [Garden](https://github.com/noprompt/garden) via [lein-garden](https://github.com/noprompt/lein-garden) - with:

    lein garden auto

Start a web server:

    python -m SimpleHTTPServer

Open `http://localhost:8000`.

Refer to the excellent [Lighttable ClojureScript tutorial](https://github.com/swannodette/lt-cljs-tutorial) for integrating a ClojureScript REPL with Lighttable.
Or [Perfect ClojureScript Development Environment With Vim](https://astashov.github.io/blog/2014/07/30/perfect-clojurescript-development-environment-with-vim) for the same with vim.
You should easily find similar tutorials for Emacs - check out [Austin](https://github.com/cemerick/austin).

Also see [Weasel](https://github.com/tomjakubowski/weasel) and [Figwheel](https://github.com/bhauman/lein-figwheel).


